// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace App.Sdk.Models {
    public class VideoObject : IParsable {
        /// <summary>The additionalDataProperty property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public VideoObject_additionalData? AdditionalDataProperty { get; set; }
#nullable restore
#else
        public VideoObject_additionalData AdditionalDataProperty { get; set; }
#endif
        /// <summary>The allowHttpsEmbed property</summary>
        public bool? AllowHttpsEmbed { get; private set; }
        /// <summary>The allowMobileEmbed property</summary>
        public bool? AllowMobileEmbed { get; private set; }
        /// <summary>The alternateName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlternateName { get; private set; }
#nullable restore
#else
        public string AlternateName { get; private set; }
#endif
        /// <summary>The bingId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BingId { get; private set; }
#nullable restore
#else
        public string BingId { get; private set; }
#endif
        /// <summary>The contentUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentUrl { get; private set; }
#nullable restore
#else
        public string ContentUrl { get; private set; }
#endif
        /// <summary>The datePublished property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DatePublished { get; private set; }
#nullable restore
#else
        public string DatePublished { get; private set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; private set; }
#nullable restore
#else
        public string Description { get; private set; }
#endif
        /// <summary>The embedHtml property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmbedHtml { get; private set; }
#nullable restore
#else
        public string EmbedHtml { get; private set; }
#endif
        /// <summary>The height property</summary>
        public int? Height { get; private set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>The image property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ImageObject? Image { get; set; }
#nullable restore
#else
        public ImageObject Image { get; set; }
#endif
        /// <summary>The isSuperfresh property</summary>
        public bool? IsSuperfresh { get; private set; }
        /// <summary>The motionThumbnailId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MotionThumbnailId { get; private set; }
#nullable restore
#else
        public string MotionThumbnailId { get; private set; }
#endif
        /// <summary>The motionThumbnailUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MotionThumbnailUrl { get; private set; }
#nullable restore
#else
        public string MotionThumbnailUrl { get; private set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; private set; }
#nullable restore
#else
        public string Name { get; private set; }
#endif
        /// <summary>The provider property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Thing>? Provider { get; private set; }
#nullable restore
#else
        public List<Thing> Provider { get; private set; }
#endif
        /// <summary>The thumbnail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ImageObject? Thumbnail { get; set; }
#nullable restore
#else
        public ImageObject Thumbnail { get; set; }
#endif
        /// <summary>The thumbnailUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailUrl { get; private set; }
#nullable restore
#else
        public string ThumbnailUrl { get; private set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>The video property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public VideoObject? Video { get; set; }
#nullable restore
#else
        public VideoObject Video { get; set; }
#endif
        /// <summary>The videoId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VideoId { get; private set; }
#nullable restore
#else
        public string VideoId { get; private set; }
#endif
        /// <summary>The viewCount property</summary>
        public int? ViewCount { get; private set; }
        /// <summary>The webSearchUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebSearchUrl { get; private set; }
#nullable restore
#else
        public string WebSearchUrl { get; private set; }
#endif
        /// <summary>The width property</summary>
        public int? Width { get; private set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="VideoObject"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static VideoObject CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new VideoObject();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"additionalData", n => { AdditionalDataProperty = n.GetObjectValue<VideoObject_additionalData>(VideoObject_additionalData.CreateFromDiscriminatorValue); } },
                {"allowHttpsEmbed", n => { AllowHttpsEmbed = n.GetBoolValue(); } },
                {"allowMobileEmbed", n => { AllowMobileEmbed = n.GetBoolValue(); } },
                {"alternateName", n => { AlternateName = n.GetStringValue(); } },
                {"bingId", n => { BingId = n.GetStringValue(); } },
                {"contentUrl", n => { ContentUrl = n.GetStringValue(); } },
                {"datePublished", n => { DatePublished = n.GetStringValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"embedHtml", n => { EmbedHtml = n.GetStringValue(); } },
                {"height", n => { Height = n.GetIntValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"image", n => { Image = n.GetObjectValue<ImageObject>(ImageObject.CreateFromDiscriminatorValue); } },
                {"isSuperfresh", n => { IsSuperfresh = n.GetBoolValue(); } },
                {"motionThumbnailId", n => { MotionThumbnailId = n.GetStringValue(); } },
                {"motionThumbnailUrl", n => { MotionThumbnailUrl = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"provider", n => { Provider = n.GetCollectionOfObjectValues<Thing>(Thing.CreateFromDiscriminatorValue)?.ToList(); } },
                {"thumbnail", n => { Thumbnail = n.GetObjectValue<ImageObject>(ImageObject.CreateFromDiscriminatorValue); } },
                {"thumbnailUrl", n => { ThumbnailUrl = n.GetStringValue(); } },
                {"type", n => { Type = n.GetStringValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
                {"video", n => { Video = n.GetObjectValue<VideoObject>(VideoObject.CreateFromDiscriminatorValue); } },
                {"videoId", n => { VideoId = n.GetStringValue(); } },
                {"viewCount", n => { ViewCount = n.GetIntValue(); } },
                {"webSearchUrl", n => { WebSearchUrl = n.GetStringValue(); } },
                {"width", n => { Width = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<VideoObject_additionalData>("additionalData", AdditionalDataProperty);
            writer.WriteObjectValue<ImageObject>("image", Image);
            writer.WriteObjectValue<ImageObject>("thumbnail", Thumbnail);
            writer.WriteStringValue("type", Type);
            writer.WriteObjectValue<VideoObject>("video", Video);
        }
    }
}
